

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 27 06:32:31 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	strings
   214  0003                     __pstrings:	
   215  0003                     stringtab:	
   216  0003                     __stringtab:	
   217  0003                     stringcode:	
   218                           ;	String table - string pointers are 1 byte each
   219                           
   220  0003                     stringdir:	
   221  0003  3000               	movlw	high stringdir
   222  0004  008A               	movwf	10
   223  0005  0804               	movf	4,w
   224  0006  0A84               	incf	4,f
   225  0007  0782               	addwf	2,f
   226  0008                     __stringbase:	
   227  0008  3400               	retlw	0
   228  0009                     __end_of__stringtab:	
   229  0009                     _cgram_dat:	
   230  0009  340A               	retlw	10
   231  000A  3415               	retlw	21
   232  000B  3400               	retlw	0
   233  000C  341E               	retlw	30
   234  000D  3401               	retlw	1
   235  000E  341F               	retlw	31
   236  000F  3411               	retlw	17
   237  0010  341F               	retlw	31
   238  0011  3402               	retlw	2
   239  0012  3404               	retlw	4
   240  0013  3400               	retlw	0
   241  0014  341E               	retlw	30
   242  0015  3401               	retlw	1
   243  0016  341F               	retlw	31
   244  0017  3411               	retlw	17
   245  0018  341F               	retlw	31
   246  0019  3400               	retlw	0
   247  001A  3411               	retlw	17
   248  001B  3411               	retlw	17
   249  001C  340B               	retlw	11
   250  001D  3406               	retlw	6
   251  001E  340C               	retlw	12
   252  001F  341A               	retlw	26
   253  0020  3400               	retlw	0
   254  0021  3499               	retlw	153
   255  0022                     __end_of_cgram_dat:	
   256  0022                     _dat_line1:	
   257  0022  3420               	retlw	32
   258  0023  3420               	retlw	32
   259  0024  3420               	retlw	32
   260  0025  3454               	retlw	84
   261  0026  3452               	retlw	82
   262  0027  3400               	retlw	0
   263  0028  344E               	retlw	78
   264  0029  3420               	retlw	32
   265  002A  3442               	retlw	66
   266  002B  3401               	retlw	1
   267  002C  3420               	retlw	32
   268  002D  3454               	retlw	84
   269  002E  3402               	retlw	2
   270  002F  3420               	retlw	32
   271  0030  3420               	retlw	32
   272  0031  3420               	retlw	32
   273  0032  3420               	retlw	32
   274  0033                     __end_of_dat_line1:	
   275  0033                     _dat_line2:	
   276  0033  3450               	retlw	80
   277  0034  3457               	retlw	87
   278  0035  344D               	retlw	77
   279  0036  342D               	retlw	45
   280  0037  3466               	retlw	102
   281  0038  343D               	retlw	61
   282  0039  3438               	retlw	56
   283  003A  344B               	retlw	75
   284  003B  3448               	retlw	72
   285  003C  347A               	retlw	122
   286  003D  342D               	retlw	45
   287  003E  3444               	retlw	68
   288  003F  343D               	retlw	61
   289  0040  3436               	retlw	54
   290  0041  3430               	retlw	48
   291  0042  3425               	retlw	37
   292  0043  3420               	retlw	32
   293  0044                     __end_of_dat_line2:	
   294  0006                     _PORTB	set	6
   295  0012                     _T2CON	set	18
   296  001D                     _CCP2CON	set	29
   297  001B                     _CCPR2L	set	27
   298  0011                     _TMR2	set	17
   299  0092                     _TMR2ON	set	146
   300  00EC                     _DC2B0	set	236
   301  00ED                     _DC2B1	set	237
   302  0031                     _RB1	set	49
   303  0030                     _RB0	set	48
   304  0044                     _RD4	set	68
   305  0045                     _RD5	set	69
   306  0046                     _RD6	set	70
   307  0047                     _RD7	set	71
   308  0043                     _RD3	set	67
   309  0041                     _RD1	set	65
   310  0042                     _RD2	set	66
   311  0095                     _WPUB	set	149
   312  0086                     _TRISB	set	134
   313  0092                     _PR2	set	146
   314  040F                     _nRBPU	set	1039
   315  0439                     _TRISC1	set	1081
   316  0442                     _TRISD2	set	1090
   317  0441                     _TRISD1	set	1089
   318  0443                     _TRISD3	set	1091
   319  0447                     _TRISD7	set	1095
   320  0446                     _TRISD6	set	1094
   321  0445                     _TRISD5	set	1093
   322  0444                     _TRISD4	set	1092
   323  0189                     _ANSELH	set	393
   324  0188                     _ANSEL	set	392
   325  0044                     STR_2:	
   326  0044  3420               	retlw	32	;' '
   327  0045  3420               	retlw	32	;' '
   328  0046  3420               	retlw	32	;' '
   329  0047  3420               	retlw	32	;' '
   330  0048  344D               	retlw	77	;'M'
   331  0049  344F               	retlw	79	;'O'
   332  004A  3444               	retlw	68	;'D'
   333  004B  3455               	retlw	85	;'U'
   334  004C  344C               	retlw	76	;'L'
   335  004D  3420               	retlw	32	;' '
   336  004E  3443               	retlw	67	;'C'
   337  004F  3443               	retlw	67	;'C'
   338  0050  3450               	retlw	80	;'P'
   339  0051  3420               	retlw	32	;' '
   340  0052  3420               	retlw	32	;' '
   341  0053  3420               	retlw	32	;' '
   342  0054  3420               	retlw	32	;' '
   343  0055  3420               	retlw	32	;' '
   344  0056  3400               	retlw	0
   345  0057                     STR_1:	
   346  0057  3444               	retlw	68	;'D'
   347  0058  3448               	retlw	72	;'H'
   348  0059  344D               	retlw	77	;'M'
   349  005A  3454               	retlw	84	;'T'
   350  005B  3431               	retlw	49	;'1'
   351  005C  3435               	retlw	53	;'5'
   352  005D  3442               	retlw	66	;'B'
   353  005E  342D               	retlw	45	;'-'
   354  005F  3431               	retlw	49	;'1'
   355  0060  3439               	retlw	57	;'9'
   356  0061  3434               	retlw	52	;'4'
   357  0062  3438               	retlw	56	;'8'
   358  0063  3436               	retlw	54	;'6'
   359  0064  3439               	retlw	57	;'9'
   360  0065  3430               	retlw	48	;'0'
   361  0066  3431               	retlw	49	;'1'
   362  0067  3400               	retlw	0
   363                           
   364                           ; #config settings
   365  0000                     
   366                           	psect	cinit
   367  07FC                     start_initialization:	
   368  07FC                     __initialization:	
   369  07FC                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  07FC                     __end_of__initialization:	
   373  07FC  0183               	clrf	3
   374  07FD  120A  118A  2D47   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:	
   378  0070                     ?_lcd_busy:	
   379  0070                     ??_lcd_busy:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_lcd_put_nibble:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ??_lcd_put_nibble:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_lcd_putc:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_lcd_puts:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_lcd_init:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_putch:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_sw0:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_sw1:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_printf:	
   410                           ; 1 bytes @ 0x0
   411                           
   412                           
   413                           ; 2 bytes @ 0x0
   414  0070                     	ds	1
   415  0071                     lcd_busy@busy:	
   416  0071                     lcd_put_nibble@b:	
   417                           ; 1 bytes @ 0x1
   418                           
   419                           
   420                           ; 1 bytes @ 0x1
   421  0071                     	ds	1
   422  0072                     lcd_put_nibble@temp:	
   423                           
   424                           ; 1 bytes @ 0x2
   425  0072                     	ds	1
   426  0073                     ?_lcd_put_byte:	
   427  0073                     lcd_put_byte@b:	
   428                           ; 1 bytes @ 0x3
   429                           
   430                           
   431                           ; 1 bytes @ 0x3
   432  0073                     	ds	1
   433  0074                     ??_lcd_put_byte:	
   434                           
   435                           ; 1 bytes @ 0x4
   436  0074                     	ds	1
   437  0075                     lcd_put_byte@rs:	
   438                           
   439                           ; 1 bytes @ 0x5
   440  0075                     	ds	1
   441  0076                     ?_lcd_gotoxy:	
   442  0076                     ??_lcd_init:	
   443                           ; 1 bytes @ 0x6
   444                           
   445  0076                     lcd_gotoxy@row:	
   446                           ; 1 bytes @ 0x6
   447                           
   448                           
   449                           ; 1 bytes @ 0x6
   450  0076                     	ds	1
   451  0077                     ??_lcd_gotoxy:	
   452                           
   453                           ; 1 bytes @ 0x7
   454  0077                     	ds	1
   455  0078                     lcd_gotoxy@col:	
   456                           
   457                           ; 1 bytes @ 0x8
   458  0078                     	ds	1
   459  0079                     lcd_gotoxy@address:	
   460                           
   461                           ; 1 bytes @ 0x9
   462  0079                     	ds	1
   463  007A                     ??_lcd_putc:	
   464                           
   465                           ; 1 bytes @ 0xA
   466  007A                     	ds	1
   467  007B                     lcd_putc@c:	
   468                           
   469                           ; 1 bytes @ 0xB
   470  007B                     	ds	1
   471  007C                     ??_lcd_puts:	
   472  007C                     ??_putch:	
   473                           ; 1 bytes @ 0xC
   474                           
   475  007C                     putch@c:	
   476                           ; 1 bytes @ 0xC
   477                           
   478                           
   479                           ; 1 bytes @ 0xC
   480  007C                     	ds	1
   481  007D                     ??_printf:	
   482  007D                     lcd_puts@s:	
   483                           ; 1 bytes @ 0xD
   484                           
   485                           
   486                           ; 1 bytes @ 0xD
   487  007D                     	ds	1
   488  007E                     ??_main:	
   489                           
   490                           	psect	cstackBANK0
   491  0020                     __pcstackBANK0:	
   492                           ; 1 bytes @ 0xE
   493                           
   494  0020                     printf@ap:	
   495                           
   496                           ; 1 bytes @ 0x0
   497  0020                     	ds	1
   498  0021                     printf@c:	
   499                           
   500                           ; 1 bytes @ 0x1
   501  0021                     	ds	1
   502  0022                     printf@f:	
   503                           
   504                           ; 1 bytes @ 0x2
   505  0022                     	ds	1
   506  0023                     ??_sw0:	
   507  0023                     ??_sw1:	
   508                           ; 1 bytes @ 0x3
   509                           
   510                           
   511                           ; 1 bytes @ 0x3
   512  0023                     	ds	2
   513  0025                     sw0@i:	
   514                           
   515                           ; 1 bytes @ 0x5
   516  0025                     	ds	1
   517                           
   518                           	psect	maintext
   519  0547                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 81 in file "Bai_4.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : B00/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels required when called:    7
   545 ;; This function calls:
   546 ;;		_lcd_init
   547 ;;		_sw0
   548 ;;		_sw1
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           
   555                           ;psect for function _main
   556  0547                     _main:	
   557                           
   558                           ;Bai_4.c: 83: ANSEL = 0;
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   562  0547  1683               	bsf	3,5	;RP0=1, select bank3
   563  0548  1703               	bsf	3,6	;RP1=1, select bank3
   564  0549  0188               	clrf	8	;volatile
   565                           
   566                           ;Bai_4.c: 84: ANSELH = 0x00;
   567  054A  0189               	clrf	9	;volatile
   568                           
   569                           ;Bai_4.c: 85: TRISB = 0x07;
   570  054B  3007               	movlw	7
   571  054C  1683               	bsf	3,5	;RP0=1, select bank1
   572  054D  1303               	bcf	3,6	;RP1=0, select bank1
   573  054E  0086               	movwf	6	;volatile
   574                           
   575                           ;Bai_4.c: 86: PORTB = 0;
   576  054F  1283               	bcf	3,5	;RP0=0, select bank0
   577  0550  1303               	bcf	3,6	;RP1=0, select bank0
   578  0551  0186               	clrf	6	;volatile
   579                           
   580                           ;Bai_4.c: 87: nRBPU = 0;
   581  0552  1683               	bsf	3,5	;RP0=1, select bank1
   582  0553  1303               	bcf	3,6	;RP1=0, select bank1
   583  0554  1381               	bcf	1,7	;volatile
   584                           
   585                           ;Bai_4.c: 88: WPUB = 0x07;
   586  0555  3007               	movlw	7
   587  0556  0095               	movwf	21	;volatile
   588                           
   589                           ;Bai_4.c: 89: lcd_init();
   590  0557  120A  118A  2763  120A  118A  	fcall	_lcd_init
   591  055C                     l1232:	
   592                           ;Bai_4.c: 90: while(1){
   593                           
   594                           
   595                           ;Bai_4.c: 91: sw0();
   596  055C  120A  118A  26CD  120A  118A  	fcall	_sw0
   597                           
   598                           ;Bai_4.c: 92: sw1();
   599  0561  120A  118A  267A  120A  118A  	fcall	_sw1
   600  0566  2D5C               	goto	l1232
   601  0567                     __end_of_main:	
   602                           
   603                           	psect	text1
   604  067A                     __ptext1:	
   605 ;; *************** function _sw1 *****************
   606 ;; Defined at:
   607 ;;		line 57 in file "Bai_4.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          0       2       0       0       0
   624 ;;      Totals:         0       2       0       0       0
   625 ;;Total ram usage:        2 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; Hardware stack levels required when called:    6
   628 ;; This function calls:
   629 ;;		_lcd_gotoxy
   630 ;;		_lcd_puts
   631 ;;		_printf
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _sw1
   639  067A                     _sw1:	
   640                           
   641                           ;Bai_4.c: 59: if(!RB1){
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _sw1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   645  067A  1283               	bcf	3,5	;RP0=0, select bank0
   646  067B  1303               	bcf	3,6	;RP1=0, select bank0
   647  067C  1886               	btfsc	6,1	;volatile
   648  067D  0008               	return
   649                           
   650                           ;Bai_4.c: 60: _delay((unsigned long)((5)*(4000000/4000.0)));
   651  067E  3007               	movlw	7
   652  067F  1283               	bcf	3,5	;RP0=0, select bank0
   653  0680  1303               	bcf	3,6	;RP1=0, select bank0
   654  0681  00A4               	movwf	??_sw1+1
   655  0682  307C               	movlw	124
   656  0683  00A3               	movwf	??_sw1
   657  0684                     u787:	
   658  0684  0BA3               	decfsz	??_sw1,f
   659  0685  2E84               	goto	u787
   660  0686  0BA4               	decfsz	??_sw1+1,f
   661  0687  2E84               	goto	u787
   662  0688  0000               	nop
   663  0689                     l1192:	
   664                           ;Bai_4.c: 61: while(!RB1){
   665                           
   666  0689  1283               	bcf	3,5	;RP0=0, select bank0
   667  068A  1303               	bcf	3,6	;RP1=0, select bank0
   668  068B  1886               	btfsc	6,1	;volatile
   669  068C  0008               	return
   670                           
   671                           ;Bai_4.c: 62: _delay((unsigned long)((5)*(4000000/4000.0)));
   672  068D  3007               	movlw	7
   673  068E  1283               	bcf	3,5	;RP0=0, select bank0
   674  068F  1303               	bcf	3,6	;RP1=0, select bank0
   675  0690  00A4               	movwf	??_sw1+1
   676  0691  307C               	movlw	124
   677  0692  00A3               	movwf	??_sw1
   678  0693                     u797:	
   679  0693  0BA3               	decfsz	??_sw1,f
   680  0694  2E93               	goto	u797
   681  0695  0BA4               	decfsz	??_sw1+1,f
   682  0696  2E93               	goto	u797
   683  0697  0000               	nop
   684                           
   685                           ;Bai_4.c: 63: TRISC1 = 1;
   686  0698  1683               	bsf	3,5	;RP0=1, select bank1
   687  0699  1303               	bcf	3,6	;RP1=0, select bank1
   688  069A  1487               	bsf	7,1	;volatile
   689                           
   690                           ;Bai_4.c: 64: TMR2 = 0X00;
   691  069B  1283               	bcf	3,5	;RP0=0, select bank0
   692  069C  1303               	bcf	3,6	;RP1=0, select bank0
   693  069D  0191               	clrf	17	;volatile
   694                           
   695                           ;Bai_4.c: 65: PR2 = 124;
   696  069E  307C               	movlw	124
   697  069F  1683               	bsf	3,5	;RP0=1, select bank1
   698  06A0  1303               	bcf	3,6	;RP1=0, select bank1
   699  06A1  0092               	movwf	18	;volatile
   700                           
   701                           ;Bai_4.c: 66: CCPR2L = 75;
   702  06A2  304B               	movlw	75
   703  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   704  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   705  06A5  009B               	movwf	27	;volatile
   706                           
   707                           ;Bai_4.c: 67: CCP2CON = 0X0C;
   708  06A6  300C               	movlw	12
   709  06A7  009D               	movwf	29	;volatile
   710                           
   711                           ;Bai_4.c: 68: DC2B1 = 0;
   712  06A8  129D               	bcf	29,5	;volatile
   713                           
   714                           ;Bai_4.c: 69: DC2B0 = 0;
   715  06A9  121D               	bcf	29,4	;volatile
   716                           
   717                           ;Bai_4.c: 70: TRISC1 = 0;
   718  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   719  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   720  06AC  1087               	bcf	7,1	;volatile
   721                           
   722                           ;Bai_4.c: 71: T2CON = 0X00;
   723  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   724  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   725  06AF  0192               	clrf	18	;volatile
   726                           
   727                           ;Bai_4.c: 72: TMR2ON = 1;
   728  06B0  1512               	bsf	18,2	;volatile
   729                           
   730                           ;Bai_4.c: 74: lcd_gotoxy(0,0);
   731  06B1  01F6               	clrf	lcd_gotoxy@row
   732  06B2  3000               	movlw	0
   733  06B3  120A  118A  2567  120A  118A  	fcall	_lcd_gotoxy
   734                           
   735                           ;Bai_4.c: 75: printf ("    MODUL CCP     ");
   736  06B8  303C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   737  06B9  120A  118A  2527  120A  118A  	fcall	_printf
   738                           
   739                           ;Bai_4.c: 76: lcd_gotoxy(0,1);
   740  06BE  01F6               	clrf	lcd_gotoxy@row
   741  06BF  0AF6               	incf	lcd_gotoxy@row,f
   742  06C0  3000               	movlw	0
   743  06C1  120A  118A  2567  120A  118A  	fcall	_lcd_gotoxy
   744                           
   745                           ;Bai_4.c: 77: lcd_puts(dat_line2);
   746  06C6  302B               	movlw	(low ((_dat_line2-__stringbase)| (0+32768)))& (0+255)
   747  06C7  120A  118A  250B  120A  118A  	fcall	_lcd_puts
   748  06CC  2E89               	goto	l1192
   749  06CD                     __end_of_sw1:	
   750                           
   751                           	psect	text2
   752  050B                     __ptext2:	
   753 ;; *************** function _lcd_puts *****************
   754 ;; Defined at:
   755 ;;		line 224 in file "lcd.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  s               1    wreg     PTR const unsigned char 
   758 ;;		 -> dat_line2(17), 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  s               1   13[COMMON] PTR const unsigned char 
   761 ;;		 -> dat_line2(17), 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0
   773 ;;      Temps:          1       0       0       0       0
   774 ;;      Totals:         2       0       0       0       0
   775 ;;Total ram usage:        2 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    4
   778 ;; This function calls:
   779 ;;		_lcd_putc
   780 ;; This function is called by:
   781 ;;		_sw1
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _lcd_puts
   787  050B                     _lcd_puts:	
   788                           
   789                           ;incstack = 0
   790                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   791                           ;lcd_puts@s stored from wreg
   792  050B  00FD               	movwf	lcd_puts@s
   793  050C                     l1070:	
   794                           ;lcd.c: 229: while(*s)
   795                           
   796  050C  087D               	movf	lcd_puts@s,w
   797  050D  0084               	movwf	4
   798  050E  120A  118A  2003  120A  118A  	fcall	stringdir
   799  0513  3A00               	xorlw	0
   800  0514  1903               	btfsc	3,2
   801  0515  0008               	return
   802                           
   803                           ;lcd.c: 230: {
   804                           ;lcd.c: 231: lcd_putc(*s++);
   805  0516  087D               	movf	lcd_puts@s,w
   806  0517  0084               	movwf	4
   807  0518  120A  118A  2003  120A  118A  	fcall	stringdir
   808  051D  120A  118A  262E  120A  118A  	fcall	_lcd_putc
   809  0522  3001               	movlw	1
   810  0523  00FC               	movwf	??_lcd_puts
   811  0524  087C               	movf	??_lcd_puts,w
   812  0525  07FD               	addwf	lcd_puts@s,f
   813  0526  2D0C               	goto	l1070
   814  0527                     __end_of_lcd_puts:	
   815                           
   816                           	psect	text3
   817  06CD                     __ptext3:	
   818 ;; *************** function _sw0 *****************
   819 ;; Defined at:
   820 ;;		line 33 in file "Bai_4.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  i               1    5[BANK0 ] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       1       0       0       0
   836 ;;      Temps:          0       2       0       0       0
   837 ;;      Totals:         0       3       0       0       0
   838 ;;Total ram usage:        3 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    6
   841 ;; This function calls:
   842 ;;		_lcd_busy
   843 ;;		_lcd_gotoxy
   844 ;;		_lcd_put_byte
   845 ;;		_lcd_putc
   846 ;;		_printf
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _sw0
   854  06CD                     _sw0:	
   855                           
   856                           ;Bai_4.c: 35: if(!RB0){
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _sw0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   860  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   861  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   862  06CF  1806               	btfsc	6,0	;volatile
   863  06D0  0008               	return
   864                           
   865                           ;Bai_4.c: 36: _delay((unsigned long)((5)*(4000000/4000.0)));
   866  06D1  3007               	movlw	7
   867  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   868  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   869  06D4  00A4               	movwf	??_sw0+1
   870  06D5  307C               	movlw	124
   871  06D6  00A3               	movwf	??_sw0
   872  06D7                     u807:	
   873  06D7  0BA3               	decfsz	??_sw0,f
   874  06D8  2ED7               	goto	u807
   875  06D9  0BA4               	decfsz	??_sw0+1,f
   876  06DA  2ED7               	goto	u807
   877  06DB  0000               	nop
   878  06DC                     l1158:	
   879                           ;Bai_4.c: 37: while(!RB0){
   880                           
   881  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   882  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   883  06DE  1806               	btfsc	6,0	;volatile
   884  06DF  0008               	return
   885                           
   886                           ;Bai_4.c: 38: _delay((unsigned long)((5)*(4000000/4000.0)));
   887  06E0  3007               	movlw	7
   888  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   889  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   890  06E3  00A4               	movwf	??_sw0+1
   891  06E4  307C               	movlw	124
   892  06E5  00A3               	movwf	??_sw0
   893  06E6                     u817:	
   894  06E6  0BA3               	decfsz	??_sw0,f
   895  06E7  2EE6               	goto	u817
   896  06E8  0BA4               	decfsz	??_sw0+1,f
   897  06E9  2EE6               	goto	u817
   898  06EA  0000               	nop
   899                           
   900                           ;Bai_4.c: 39: unsigned char i;
   901                           ;Bai_4.c: 40: i = 0;
   902  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   903  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   904  06ED  01A5               	clrf	sw0@i
   905                           
   906                           ;Bai_4.c: 41: lcd_put_byte(0,0x40);
   907  06EE  3040               	movlw	64
   908  06EF  00A3               	movwf	??_sw0
   909  06F0  0823               	movf	??_sw0,w
   910  06F1  00F3               	movwf	lcd_put_byte@b
   911  06F2  3000               	movlw	0
   912  06F3  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
   913  06F8                     l1130:	
   914                           ;Bai_4.c: 42: while(lcd_busy());
   915                           
   916  06F8  120A  118A  2589  120A  118A  	fcall	_lcd_busy
   917  06FD  3A00               	xorlw	0
   918  06FE  1903               	btfsc	3,2
   919  06FF  2F22               	goto	l1138
   920  0700  2EF8               	goto	l1130
   921  0701                     l1132:	
   922                           ;Bai_4.c: 43: while(cgram_dat[i]!=0x99)
   923                           
   924                           
   925                           ;Bai_4.c: 44: {
   926                           ;Bai_4.c: 45: lcd_put_byte(1,cgram_dat[i]);
   927  0701  1283               	bcf	3,5	;RP0=0, select bank0
   928  0702  1303               	bcf	3,6	;RP1=0, select bank0
   929  0703  0825               	movf	sw0@i,w
   930  0704  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   931  0705  0084               	movwf	4
   932  0706  120A  118A  2003  120A  118A  	fcall	stringdir
   933  070B  00A3               	movwf	??_sw0
   934  070C  0823               	movf	??_sw0,w
   935  070D  00F3               	movwf	lcd_put_byte@b
   936  070E  3001               	movlw	1
   937  070F  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
   938  0714                     l1134:	
   939                           ;Bai_4.c: 46: while(lcd_busy());
   940                           
   941  0714  120A  118A  2589  120A  118A  	fcall	_lcd_busy
   942  0719  3A00               	xorlw	0
   943  071A  1D03               	skipz
   944  071B  2F14               	goto	l1134
   945                           
   946                           ;Bai_4.c: 47: i++;
   947  071C  3001               	movlw	1
   948  071D  1283               	bcf	3,5	;RP0=0, select bank0
   949  071E  1303               	bcf	3,6	;RP1=0, select bank0
   950  071F  00A3               	movwf	??_sw0
   951  0720  0823               	movf	??_sw0,w
   952  0721  07A5               	addwf	sw0@i,f
   953  0722                     l1138:	
   954  0722  1283               	bcf	3,5	;RP0=0, select bank0
   955  0723  1303               	bcf	3,6	;RP1=0, select bank0
   956  0724  0825               	movf	sw0@i,w
   957  0725  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   958  0726  0084               	movwf	4
   959  0727  120A  118A  2003  120A  118A  	fcall	stringdir
   960  072C  3A99               	xorlw	153
   961  072D  1D03               	skipz
   962  072E  2F01               	goto	l1132
   963                           
   964                           ;Bai_4.c: 48: }
   965                           ;Bai_4.c: 49: lcd_gotoxy(0,0);
   966  072F  01F6               	clrf	lcd_gotoxy@row
   967  0730  3000               	movlw	0
   968  0731  120A  118A  2567  120A  118A  	fcall	_lcd_gotoxy
   969                           
   970                           ;Bai_4.c: 50: for(i=0;i<=16;i++)
   971  0736  1283               	bcf	3,5	;RP0=0, select bank0
   972  0737  1303               	bcf	3,6	;RP1=0, select bank0
   973  0738  01A5               	clrf	sw0@i
   974  0739  3011               	movlw	17
   975  073A  0225               	subwf	sw0@i,w
   976  073B  1803               	btfsc	3,0
   977  073C  2F54               	goto	l1154
   978  073D                     l1148:	
   979                           
   980                           ;Bai_4.c: 51: lcd_putc(dat_line1[i]);
   981  073D  0825               	movf	sw0@i,w
   982  073E  3E1A               	addlw	low ((_dat_line1-__stringbase)| (0+32768))
   983  073F  0084               	movwf	4
   984  0740  120A  118A  2003  120A  118A  	fcall	stringdir
   985  0745  120A  118A  262E  120A  118A  	fcall	_lcd_putc
   986  074A  3001               	movlw	1
   987  074B  1283               	bcf	3,5	;RP0=0, select bank0
   988  074C  1303               	bcf	3,6	;RP1=0, select bank0
   989  074D  00A3               	movwf	??_sw0
   990  074E  0823               	movf	??_sw0,w
   991  074F  07A5               	addwf	sw0@i,f
   992  0750  3011               	movlw	17
   993  0751  0225               	subwf	sw0@i,w
   994  0752  1C03               	skipc
   995  0753  2F3D               	goto	l1148
   996  0754                     l1154:	
   997                           
   998                           ;Bai_4.c: 52: lcd_gotoxy(0,1);
   999  0754  01F6               	clrf	lcd_gotoxy@row
  1000  0755  0AF6               	incf	lcd_gotoxy@row,f
  1001  0756  3000               	movlw	0
  1002  0757  120A  118A  2567  120A  118A  	fcall	_lcd_gotoxy
  1003                           
  1004                           ;Bai_4.c: 53: printf ("DHMT15B-19486901");
  1005  075C  304F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1006  075D  120A  118A  2527  120A  118A  	fcall	_printf
  1007  0762  2EDC               	goto	l1158
  1008  0763                     __end_of_sw0:	
  1009                           
  1010                           	psect	text4
  1011  0527                     __ptext4:	
  1012 ;; *************** function _printf *****************
  1013 ;; Defined at:
  1014 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  f               1    wreg     PTR const unsigned char 
  1017 ;;		 -> STR_2(19), STR_1(17), 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  1020 ;;		 -> STR_2(19), STR_1(17), 
  1021 ;;  tmpval          4    0        struct .
  1022 ;;  cp              2    0        PTR const unsigned char 
  1023 ;;  len             2    0        unsigned int 
  1024 ;;  val             2    0        unsigned int 
  1025 ;;  c               1    1[BANK0 ] char 
  1026 ;;  ap              1    0[BANK0 ] PTR void [1]
  1027 ;;		 -> ?_printf(2), 
  1028 ;;  flag            1    0        unsigned char 
  1029 ;;  prec            1    0        char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2  137[None  ] int 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       3       0       0       0
  1041 ;;      Temps:          1       0       0       0       0
  1042 ;;      Totals:         1       3       0       0       0
  1043 ;;Total ram usage:        4 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    5
  1046 ;; This function calls:
  1047 ;;		_putch
  1048 ;; This function is called by:
  1049 ;;		_sw0
  1050 ;;		_sw1
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _printf
  1056  0527                     _printf:	
  1057                           
  1058                           ;incstack = 0
  1059                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1060                           ;printf@f stored from wreg
  1061  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0529  00A2               	movwf	printf@f
  1064                           
  1065                           ;doprnt.c: 466: va_list ap;
  1066                           ;doprnt.c: 499: signed char c;
  1067                           ;doprnt.c: 506: signed char prec;
  1068                           ;doprnt.c: 508: unsigned char flag;
  1069                           ;doprnt.c: 523: union {
  1070                           ;doprnt.c: 524: unsigned long vd;
  1071                           ;doprnt.c: 525: double integ;
  1072                           ;doprnt.c: 526: } tmpval;
  1073                           ;doprnt.c: 528: unsigned int val;
  1074                           ;doprnt.c: 529: unsigned len;
  1075                           ;doprnt.c: 530: const char * cp;
  1076                           ;doprnt.c: 533: *ap = __va_start();
  1077  052A  3070               	movlw	(low (?_printf| 0))& (0+255)
  1078  052B  00FD               	movwf	??_printf
  1079  052C  087D               	movf	??_printf,w
  1080  052D  00A0               	movwf	printf@ap
  1081  052E                     l1076:	
  1082                           ;doprnt.c: 543: }
  1083                           ;doprnt.c: 1422: {
  1084                           
  1085                           ;doprnt.c: 542: continue;
  1086                           
  1087                           ;doprnt.c: 536: while(c = *f++) {
  1088                           
  1089  052E  3001               	movlw	1
  1090  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0531  07A2               	addwf	printf@f,f
  1093  0532  30FF               	movlw	-1
  1094  0533  0722               	addwf	printf@f,w
  1095  0534  0084               	movwf	4
  1096  0535  120A  118A  2003  120A  118A  	fcall	stringdir
  1097  053A  00FD               	movwf	??_printf
  1098  053B  087D               	movf	??_printf,w
  1099  053C  00A1               	movwf	printf@c
  1100  053D  0821               	movf	printf@c,w
  1101  053E  1903               	btfsc	3,2
  1102  053F  0008               	return
  1103                           
  1104                           ;doprnt.c: 540: {
  1105                           ;doprnt.c: 541: (putch(c) );
  1106  0540  0821               	movf	printf@c,w
  1107  0541  120A  118A  2505  120A  118A  	fcall	_putch
  1108  0546  2D2E               	goto	l1076
  1109  0547                     __end_of_printf:	
  1110                           ;doprnt.c: 1469: }
  1111                           ;doprnt.c: 1533: }
  1112                           ;doprnt.c: 1540: return 0;
  1113                           ;	Return value of _printf is never used
  1114                           
  1115                           
  1116                           	psect	text5
  1117  0505                     __ptext5:	
  1118 ;; *************** function _putch *****************
  1119 ;; Defined at:
  1120 ;;		line 368 in file "lcd.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  c               1    wreg     unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  c               1   12[COMMON] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0
  1137 ;;      Totals:         1       0       0       0       0
  1138 ;;Total ram usage:        1 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    4
  1141 ;; This function calls:
  1142 ;;		_lcd_putc
  1143 ;; This function is called by:
  1144 ;;		_printf
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _putch
  1150  0505                     _putch:	
  1151                           
  1152                           ;incstack = 0
  1153                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1154                           ;putch@c stored from wreg
  1155  0505  00FC               	movwf	putch@c
  1156                           
  1157                           ;lcd.c: 370: lcd_putc(c);
  1158  0506  087C               	movf	putch@c,w
  1159  0507  120A  118A  262E   	fcall	_lcd_putc
  1160  050A  0008               	return
  1161  050B                     __end_of_putch:	
  1162                           
  1163                           	psect	text6
  1164  062E                     __ptext6:	
  1165 ;; *************** function _lcd_putc *****************
  1166 ;; Defined at:
  1167 ;;		line 190 in file "lcd.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  c               1    wreg     unsigned char 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  c               1   11[COMMON] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         1       0       0       0       0
  1183 ;;      Temps:          1       0       0       0       0
  1184 ;;      Totals:         2       0       0       0       0
  1185 ;;Total ram usage:        2 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    3
  1188 ;; This function calls:
  1189 ;;		_lcd_busy
  1190 ;;		_lcd_gotoxy
  1191 ;;		_lcd_put_byte
  1192 ;; This function is called by:
  1193 ;;		_lcd_puts
  1194 ;;		_putch
  1195 ;;		_sw0
  1196 ;;		_lcd_String_Delay
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function _lcd_putc
  1202  062E                     _lcd_putc:	
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1206                           ;lcd_putc@c stored from wreg
  1207  062E  00FB               	movwf	lcd_putc@c
  1208                           
  1209                           ;lcd.c: 195: switch(c)
  1210  062F  2E6E               	goto	l1060
  1211  0630                     l1046:	
  1212                           ;lcd.c: 196: {
  1213                           ;lcd.c: 197: case '\f':
  1214                           
  1215                           
  1216                           ;lcd.c: 198: lcd_put_byte(0,1);
  1217  0630  01F3               	clrf	lcd_put_byte@b
  1218  0631  0AF3               	incf	lcd_put_byte@b,f
  1219  0632  3000               	movlw	0
  1220  0633  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1221  0638                     l1048:	
  1222                           ;lcd.c: 199: while(lcd_busy());
  1223                           
  1224  0638  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1225  063D  3A00               	xorlw	0
  1226  063E  1903               	btfsc	3,2
  1227  063F  0008               	return
  1228  0640  2E38               	goto	l1048
  1229  0641                     l1050:	
  1230                           ;lcd.c: 201: case '\n':
  1231                           
  1232                           ;lcd.c: 200: break;
  1233                           
  1234                           
  1235                           ;lcd.c: 202: lcd_gotoxy(0,1);
  1236  0641  01F6               	clrf	lcd_gotoxy@row
  1237  0642  0AF6               	incf	lcd_gotoxy@row,f
  1238  0643  3000               	movlw	0
  1239  0644  120A  118A  2567   	fcall	_lcd_gotoxy
  1240                           
  1241                           ;lcd.c: 203: break;
  1242  0647  0008               	return
  1243  0648                     l1052:	
  1244                           ;lcd.c: 204: case '\b':
  1245                           
  1246                           
  1247                           ;lcd.c: 205: lcd_put_byte(0,0x10);
  1248  0648  3010               	movlw	16
  1249  0649  00FA               	movwf	??_lcd_putc
  1250  064A  087A               	movf	??_lcd_putc,w
  1251  064B  00F3               	movwf	lcd_put_byte@b
  1252  064C  3000               	movlw	0
  1253  064D  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1254  0652                     l1054:	
  1255                           ;lcd.c: 206: while(lcd_busy());
  1256                           
  1257  0652  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1258  0657  3A00               	xorlw	0
  1259  0658  1903               	btfsc	3,2
  1260  0659  0008               	return
  1261  065A  2E52               	goto	l1054
  1262  065B                     l1056:	
  1263                           ;lcd.c: 208: default:
  1264                           
  1265                           ;lcd.c: 207: break;
  1266                           
  1267                           
  1268                           ;lcd.c: 210: {
  1269                           ;lcd.c: 211: lcd_put_byte(1,c);
  1270  065B  087B               	movf	lcd_putc@c,w
  1271  065C  00FA               	movwf	??_lcd_putc
  1272  065D  087A               	movf	??_lcd_putc,w
  1273  065E  00F3               	movwf	lcd_put_byte@b
  1274  065F  3001               	movlw	1
  1275  0660  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1276  0665                     l1058:	
  1277                           ;lcd.c: 212: while(lcd_busy());
  1278                           
  1279  0665  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1280  066A  3A00               	xorlw	0
  1281  066B  1903               	btfsc	3,2
  1282  066C  0008               	return
  1283  066D  2E65               	goto	l1058
  1284  066E                     l1060:	
  1285                           ;lcd.c: 213: }
  1286                           ;lcd.c: 215: }
  1287                           
  1288  066E  087B               	movf	lcd_putc@c,w
  1289                           
  1290                           ; Switch size 1, requested type "space"
  1291                           ; Number of cases is 3, Range of values is 8 to 12
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte           10     6 (average)
  1295                           ; direct_byte           26    11 (fixed)
  1296                           ; jumptable            263     9 (fixed)
  1297                           ;	Chosen strategy is simple_byte
  1298  066F  3A08               	xorlw	8	; case 8
  1299  0670  1903               	skipnz
  1300  0671  2E48               	goto	l1052
  1301  0672  3A02               	xorlw	2	; case 10
  1302  0673  1903               	skipnz
  1303  0674  2E41               	goto	l1050
  1304  0675  3A06               	xorlw	6	; case 12
  1305  0676  1903               	skipnz
  1306  0677  2E30               	goto	l1046
  1307  0678  2E5B               	goto	l1056
  1308  0679  0008               	return
  1309  067A                     __end_of_lcd_putc:	
  1310                           
  1311                           	psect	text7
  1312  0567                     __ptext7:	
  1313 ;; *************** function _lcd_gotoxy *****************
  1314 ;; Defined at:
  1315 ;;		line 167 in file "lcd.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  col             1    wreg     unsigned char 
  1318 ;;  row             1    6[COMMON] unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  col             1    8[COMMON] unsigned char 
  1321 ;;  address         1    9[COMMON] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         1       0       0       0       0
  1332 ;;      Locals:         2       0       0       0       0
  1333 ;;      Temps:          1       0       0       0       0
  1334 ;;      Totals:         4       0       0       0       0
  1335 ;;Total ram usage:        4 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    2
  1338 ;; This function calls:
  1339 ;;		_lcd_busy
  1340 ;;		_lcd_put_byte
  1341 ;; This function is called by:
  1342 ;;		_lcd_putc
  1343 ;;		_sw0
  1344 ;;		_sw1
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _lcd_gotoxy
  1350  0567                     _lcd_gotoxy:	
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1354                           ;lcd_gotoxy@col stored from wreg
  1355  0567  00F8               	movwf	lcd_gotoxy@col
  1356                           
  1357                           ;lcd.c: 170: unsigned char address;
  1358                           ;lcd.c: 173: if(row!=0)
  1359  0568  0876               	movf	lcd_gotoxy@row,w
  1360  0569  1903               	btfsc	3,2
  1361  056A  2D70               	goto	l1036
  1362                           
  1363                           ;lcd.c: 174: address=0x40;
  1364  056B  3040               	movlw	64
  1365  056C  00F7               	movwf	??_lcd_gotoxy
  1366  056D  0877               	movf	??_lcd_gotoxy,w
  1367  056E  00F9               	movwf	lcd_gotoxy@address
  1368  056F  2D71               	goto	l1038
  1369  0570                     l1036:	
  1370                           
  1371                           ;lcd.c: 175: else
  1372                           ;lcd.c: 176: address=0;
  1373  0570  01F9               	clrf	lcd_gotoxy@address
  1374  0571                     l1038:	
  1375                           
  1376                           ;lcd.c: 178: address += col;
  1377  0571  0878               	movf	lcd_gotoxy@col,w
  1378  0572  00F7               	movwf	??_lcd_gotoxy
  1379  0573  0877               	movf	??_lcd_gotoxy,w
  1380  0574  07F9               	addwf	lcd_gotoxy@address,f
  1381                           
  1382                           ;lcd.c: 180: lcd_put_byte(0,0x80|address);
  1383  0575  0879               	movf	lcd_gotoxy@address,w
  1384  0576  3880               	iorlw	128
  1385  0577  00F7               	movwf	??_lcd_gotoxy
  1386  0578  0877               	movf	??_lcd_gotoxy,w
  1387  0579  00F3               	movwf	lcd_put_byte@b
  1388  057A  3000               	movlw	0
  1389  057B  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1390  0580                     l1042:	
  1391                           ;lcd.c: 181: while(lcd_busy());
  1392                           
  1393  0580  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1394  0585  3A00               	xorlw	0
  1395  0586  1903               	btfsc	3,2
  1396  0587  0008               	return
  1397  0588  2D80               	goto	l1042
  1398  0589                     __end_of_lcd_gotoxy:	
  1399                           
  1400                           	psect	text8
  1401  0763                     __ptext8:	
  1402 ;; *************** function _lcd_init *****************
  1403 ;; Defined at:
  1404 ;;		line 241 in file "lcd.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  i               1    0        unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          2       0       0       0       0
  1421 ;;      Totals:         2       0       0       0       0
  1422 ;;Total ram usage:        2 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		_lcd_busy
  1427 ;;		_lcd_put_byte
  1428 ;;		_lcd_put_nibble
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _lcd_init
  1436  0763                     _lcd_init:	
  1437                           
  1438                           ;lcd.c: 244: unsigned char i;
  1439                           ;lcd.c: 247: TRISD3 = 0;
  1440                           
  1441                           ;incstack = 0
  1442                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1443  0763  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0764  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0765  1188               	bcf	8,3	;volatile
  1446                           
  1447                           ;lcd.c: 248: TRISD1 = 0;
  1448  0766  1088               	bcf	8,1	;volatile
  1449                           
  1450                           ;lcd.c: 249: TRISD2 = 0;
  1451  0767  1108               	bcf	8,2	;volatile
  1452                           
  1453                           ;lcd.c: 250: TRISD4 = 0;
  1454  0768  1208               	bcf	8,4	;volatile
  1455                           
  1456                           ;lcd.c: 251: TRISD5 = 0;
  1457  0769  1288               	bcf	8,5	;volatile
  1458                           
  1459                           ;lcd.c: 252: TRISD6 = 0;
  1460  076A  1308               	bcf	8,6	;volatile
  1461                           
  1462                           ;lcd.c: 253: TRISD7 = 0;
  1463  076B  1388               	bcf	8,7	;volatile
  1464                           
  1465                           ;lcd.c: 255: _delay((unsigned long)((15)*(4000000/4000.0)));
  1466  076C  3014               	movlw	20
  1467  076D  00F7               	movwf	??_lcd_init+1
  1468  076E  3079               	movlw	121
  1469  076F  00F6               	movwf	??_lcd_init
  1470  0770                     u827:	
  1471  0770  0BF6               	decfsz	??_lcd_init,f
  1472  0771  2F70               	goto	u827
  1473  0772  0BF7               	decfsz	??_lcd_init+1,f
  1474  0773  2F70               	goto	u827
  1475  0774  2F75               	nop2
  1476                           
  1477                           ;lcd.c: 257: RD1 = 0;
  1478  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0777  1088               	bcf	8,1	;volatile
  1481                           
  1482                           ;lcd.c: 258: RD2 = 0;
  1483  0778  1108               	bcf	8,2	;volatile
  1484                           
  1485                           ;lcd.c: 259: RD3 = 0;
  1486  0779  1188               	bcf	8,3	;volatile
  1487                           
  1488                           ;lcd.c: 261: lcd_put_nibble(3);
  1489  077A  3003               	movlw	3
  1490  077B  120A  118A  25EE  120A  118A  	fcall	_lcd_put_nibble
  1491                           
  1492                           ;lcd.c: 262: _delay((unsigned long)((10)*(4000000/4000.0)));
  1493  0780  300D               	movlw	13
  1494  0781  00F7               	movwf	??_lcd_init+1
  1495  0782  30FB               	movlw	251
  1496  0783  00F6               	movwf	??_lcd_init
  1497  0784                     u837:	
  1498  0784  0BF6               	decfsz	??_lcd_init,f
  1499  0785  2F84               	goto	u837
  1500  0786  0BF7               	decfsz	??_lcd_init+1,f
  1501  0787  2F84               	goto	u837
  1502  0788  2F89               	nop2
  1503                           
  1504                           ;lcd.c: 263: lcd_put_nibble(3);
  1505  0789  3003               	movlw	3
  1506  078A  120A  118A  25EE  120A  118A  	fcall	_lcd_put_nibble
  1507                           
  1508                           ;lcd.c: 264: _delay((unsigned long)((10)*(4000000/4000.0)));
  1509  078F  300D               	movlw	13
  1510  0790  00F7               	movwf	??_lcd_init+1
  1511  0791  30FB               	movlw	251
  1512  0792  00F6               	movwf	??_lcd_init
  1513  0793                     u847:	
  1514  0793  0BF6               	decfsz	??_lcd_init,f
  1515  0794  2F93               	goto	u847
  1516  0795  0BF7               	decfsz	??_lcd_init+1,f
  1517  0796  2F93               	goto	u847
  1518  0797  2F98               	nop2
  1519                           
  1520                           ;lcd.c: 265: lcd_put_nibble(3);
  1521  0798  3003               	movlw	3
  1522  0799  120A  118A  25EE  120A  118A  	fcall	_lcd_put_nibble
  1523                           
  1524                           ;lcd.c: 266: _delay((unsigned long)((10)*(4000000/4000.0)));
  1525  079E  300D               	movlw	13
  1526  079F  00F7               	movwf	??_lcd_init+1
  1527  07A0  30FB               	movlw	251
  1528  07A1  00F6               	movwf	??_lcd_init
  1529  07A2                     u857:	
  1530  07A2  0BF6               	decfsz	??_lcd_init,f
  1531  07A3  2FA2               	goto	u857
  1532  07A4  0BF7               	decfsz	??_lcd_init+1,f
  1533  07A5  2FA2               	goto	u857
  1534  07A6  2FA7               	nop2
  1535                           
  1536                           ;lcd.c: 268: lcd_put_nibble(2);
  1537  07A7  3002               	movlw	2
  1538  07A8  120A  118A  25EE  120A  118A  	fcall	_lcd_put_nibble
  1539  07AD                     l1098:	
  1540                           ;lcd.c: 269: while(lcd_busy());
  1541                           
  1542  07AD  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1543  07B2  3A00               	xorlw	0
  1544  07B3  1D03               	skipz
  1545  07B4  2FAD               	goto	l1098
  1546                           
  1547                           ;lcd.c: 271: lcd_put_byte(0,0b00101100 & 0b00111000);
  1548  07B5  3028               	movlw	40
  1549  07B6  00F6               	movwf	??_lcd_init
  1550  07B7  0876               	movf	??_lcd_init,w
  1551  07B8  00F3               	movwf	lcd_put_byte@b
  1552  07B9  3000               	movlw	0
  1553  07BA  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1554  07BF                     l1102:	
  1555                           ;lcd.c: 272: while(lcd_busy());
  1556                           
  1557  07BF  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1558  07C4  3A00               	xorlw	0
  1559  07C5  1D03               	skipz
  1560  07C6  2FBF               	goto	l1102
  1561                           
  1562                           ;lcd.c: 274: lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1563  07C7  300C               	movlw	12
  1564  07C8  00F6               	movwf	??_lcd_init
  1565  07C9  0876               	movf	??_lcd_init,w
  1566  07CA  00F3               	movwf	lcd_put_byte@b
  1567  07CB  3000               	movlw	0
  1568  07CC  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1569  07D1                     l1106:	
  1570                           ;lcd.c: 275: while(lcd_busy());
  1571                           
  1572  07D1  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1573  07D6  3A00               	xorlw	0
  1574  07D7  1D03               	skipz
  1575  07D8  2FD1               	goto	l1106
  1576                           
  1577                           ;lcd.c: 277: lcd_put_byte(0,0x01);
  1578  07D9  01F3               	clrf	lcd_put_byte@b
  1579  07DA  0AF3               	incf	lcd_put_byte@b,f
  1580  07DB  3000               	movlw	0
  1581  07DC  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1582  07E1                     l1110:	
  1583                           ;lcd.c: 278: while(lcd_busy());
  1584                           
  1585  07E1  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1586  07E6  3A00               	xorlw	0
  1587  07E7  1D03               	skipz
  1588  07E8  2FE1               	goto	l1110
  1589                           
  1590                           ;lcd.c: 280: lcd_put_byte(0,0b00000110);
  1591  07E9  3006               	movlw	6
  1592  07EA  00F6               	movwf	??_lcd_init
  1593  07EB  0876               	movf	??_lcd_init,w
  1594  07EC  00F3               	movwf	lcd_put_byte@b
  1595  07ED  3000               	movlw	0
  1596  07EE  120A  118A  25B9  120A  118A  	fcall	_lcd_put_byte
  1597  07F3                     l1114:	
  1598                           ;lcd.c: 281: while(lcd_busy());
  1599                           
  1600  07F3  120A  118A  2589  120A  118A  	fcall	_lcd_busy
  1601  07F8  3A00               	xorlw	0
  1602  07F9  1903               	btfsc	3,2
  1603  07FA  0008               	return
  1604  07FB  2FF3               	goto	l1114
  1605  07FC                     __end_of_lcd_init:	
  1606                           
  1607                           	psect	text9
  1608  05B9                     __ptext9:	
  1609 ;; *************** function _lcd_put_byte *****************
  1610 ;; Defined at:
  1611 ;;		line 134 in file "lcd.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  rs              1    wreg     unsigned char 
  1614 ;;  b               1    3[COMMON] unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  rs              1    5[COMMON] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         1       0       0       0       0
  1627 ;;      Locals:         1       0       0       0       0
  1628 ;;      Temps:          1       0       0       0       0
  1629 ;;      Totals:         3       0       0       0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    1
  1633 ;; This function calls:
  1634 ;;		_lcd_put_nibble
  1635 ;; This function is called by:
  1636 ;;		_lcd_gotoxy
  1637 ;;		_lcd_putc
  1638 ;;		_lcd_init
  1639 ;;		_sw0
  1640 ;;		_lcd_ShiftLeft
  1641 ;;		_lcd_ShiftRight
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _lcd_put_byte
  1647  05B9                     _lcd_put_byte:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1651                           ;lcd_put_byte@rs stored from wreg
  1652  05B9  00F5               	movwf	lcd_put_byte@rs
  1653                           
  1654                           ;lcd.c: 139: TRISD4 = 0;
  1655  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1656  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1657  05BC  1208               	bcf	8,4	;volatile
  1658                           
  1659                           ;lcd.c: 140: TRISD5 = 0;
  1660  05BD  1288               	bcf	8,5	;volatile
  1661                           
  1662                           ;lcd.c: 141: TRISD6 = 0;
  1663  05BE  1308               	bcf	8,6	;volatile
  1664                           
  1665                           ;lcd.c: 142: TRISD7 = 0;
  1666  05BF  1388               	bcf	8,7	;volatile
  1667                           
  1668                           ;lcd.c: 144: if(rs)
  1669  05C0  0875               	movf	lcd_put_byte@rs,w
  1670  05C1  1903               	btfsc	3,2
  1671  05C2  2DC7               	goto	l44
  1672                           
  1673                           ;lcd.c: 145: RD1 = 1;
  1674  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1675  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1676  05C5  1488               	bsf	8,1	;volatile
  1677  05C6  2DCA               	goto	l1022
  1678  05C7                     l44:	
  1679                           
  1680                           ;lcd.c: 146: else
  1681                           ;lcd.c: 147: RD1 = 0;
  1682  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1683  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1684  05C9  1088               	bcf	8,1	;volatile
  1685  05CA                     l1022:	
  1686                           
  1687                           ;lcd.c: 148: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1688  05CA  3006               	movlw	6
  1689  05CB  00F4               	movwf	??_lcd_put_byte
  1690  05CC                     u867:	
  1691  05CC  0BF4               	decfsz	??_lcd_put_byte,f
  1692  05CD  2DCC               	goto	u867
  1693  05CE  0000               	nop
  1694                           
  1695                           ;lcd.c: 150: RD2 = 0;
  1696  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1697  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1698  05D1  1108               	bcf	8,2	;volatile
  1699                           
  1700                           ;lcd.c: 151: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1701  05D2  3006               	movlw	6
  1702  05D3  00F4               	movwf	??_lcd_put_byte
  1703  05D4                     u877:	
  1704  05D4  0BF4               	decfsz	??_lcd_put_byte,f
  1705  05D5  2DD4               	goto	u877
  1706  05D6  0000               	nop
  1707                           
  1708                           ;lcd.c: 153: RD3 = 0;
  1709  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1710  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1711  05D9  1188               	bcf	8,3	;volatile
  1712                           
  1713                           ;lcd.c: 155: lcd_put_nibble(b >> 4);
  1714  05DA  0873               	movf	lcd_put_byte@b,w
  1715  05DB  00F4               	movwf	??_lcd_put_byte
  1716  05DC  3004               	movlw	4
  1717  05DD                     u535:	
  1718  05DD  1003               	clrc
  1719  05DE  0CF4               	rrf	??_lcd_put_byte,f
  1720  05DF  3EFF               	addlw	-1
  1721  05E0  1D03               	skipz
  1722  05E1  2DDD               	goto	u535
  1723  05E2  0874               	movf	??_lcd_put_byte,w
  1724  05E3  120A  118A  25EE  120A  118A  	fcall	_lcd_put_nibble
  1725                           
  1726                           ;lcd.c: 157: lcd_put_nibble(b & 0xf);
  1727  05E8  0873               	movf	lcd_put_byte@b,w
  1728  05E9  390F               	andlw	15
  1729  05EA  120A  118A  25EE   	fcall	_lcd_put_nibble
  1730  05ED  0008               	return
  1731  05EE                     __end_of_lcd_put_byte:	
  1732                           
  1733                           	psect	text10
  1734  05EE                     __ptext10:	
  1735 ;; *************** function _lcd_put_nibble *****************
  1736 ;; Defined at:
  1737 ;;		line 103 in file "lcd.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  b               1    wreg     unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  b               1    1[COMMON] unsigned char 
  1742 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         2       0       0       0       0
  1754 ;;      Temps:          1       0       0       0       0
  1755 ;;      Totals:         3       0       0       0       0
  1756 ;;Total ram usage:        3 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_lcd_put_byte
  1762 ;;		_lcd_init
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _lcd_put_nibble
  1768  05EE                     _lcd_put_nibble:	
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _lcd_put_nibble: [wreg]
  1772                           ;lcd_put_nibble@b stored from wreg
  1773  05EE  00F1               	movwf	lcd_put_nibble@b
  1774                           
  1775                           ;lcd.c: 106: BYTE_VAL temp;
  1776                           ;lcd.c: 109: TRISD4 = 0;
  1777  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  1778  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  1779  05F1  1208               	bcf	8,4	;volatile
  1780                           
  1781                           ;lcd.c: 110: TRISD5 = 0;
  1782  05F2  1288               	bcf	8,5	;volatile
  1783                           
  1784                           ;lcd.c: 111: TRISD6 = 0;
  1785  05F3  1308               	bcf	8,6	;volatile
  1786                           
  1787                           ;lcd.c: 112: TRISD7 = 0;
  1788  05F4  1388               	bcf	8,7	;volatile
  1789                           
  1790                           ;lcd.c: 114: temp.Val = b;
  1791  05F5  0871               	movf	lcd_put_nibble@b,w
  1792  05F6  00F0               	movwf	??_lcd_put_nibble
  1793  05F7  0870               	movf	??_lcd_put_nibble,w
  1794  05F8  00F2               	movwf	lcd_put_nibble@temp
  1795                           
  1796                           ;lcd.c: 116: RD4 = temp.bits.b0;
  1797  05F9  1C72               	btfss	lcd_put_nibble@temp,0
  1798  05FA  2DFF               	goto	u440
  1799  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1800  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1801  05FD  1608               	bsf	8,4	;volatile
  1802  05FE  2E02               	goto	l984
  1803  05FF                     u440:	
  1804  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0601  1208               	bcf	8,4	;volatile
  1807  0602                     l984:	
  1808                           
  1809                           ;lcd.c: 117: RD5 = temp.bits.b1;
  1810  0602  1CF2               	btfss	lcd_put_nibble@temp,1
  1811  0603  2E08               	goto	u460
  1812  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0606  1688               	bsf	8,5	;volatile
  1815  0607  2E0B               	goto	l986
  1816  0608                     u460:	
  1817  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1819  060A  1288               	bcf	8,5	;volatile
  1820  060B                     l986:	
  1821                           
  1822                           ;lcd.c: 118: RD6 = temp.bits.b2;
  1823  060B  1D72               	btfss	lcd_put_nibble@temp,2
  1824  060C  2E11               	goto	u480
  1825  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1826  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1827  060F  1708               	bsf	8,6	;volatile
  1828  0610  2E14               	goto	l988
  1829  0611                     u480:	
  1830  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0613  1308               	bcf	8,6	;volatile
  1833  0614                     l988:	
  1834                           
  1835                           ;lcd.c: 119: RD7 = temp.bits.b3;
  1836  0614  1DF2               	btfss	lcd_put_nibble@temp,3
  1837  0615  2E1A               	goto	u500
  1838  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0618  1788               	bsf	8,7	;volatile
  1841  0619  2E1D               	goto	u514
  1842  061A                     u500:	
  1843  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1844  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1845  061C  1388               	bcf	8,7	;volatile
  1846  061D                     u514:	
  1847                           
  1848                           ;lcd.c: 121: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1849  061D  3006               	movlw	6
  1850  061E  00F0               	movwf	??_lcd_put_nibble
  1851  061F                     u887:	
  1852  061F  0BF0               	decfsz	??_lcd_put_nibble,f
  1853  0620  2E1F               	goto	u887
  1854  0621  0000               	nop
  1855                           
  1856                           ;lcd.c: 122: RD3 = 1;
  1857  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0624  1588               	bsf	8,3	;volatile
  1860                           
  1861                           ;lcd.c: 123: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1862  0625  3006               	movlw	6
  1863  0626  00F0               	movwf	??_lcd_put_nibble
  1864  0627                     u897:	
  1865  0627  0BF0               	decfsz	??_lcd_put_nibble,f
  1866  0628  2E27               	goto	u897
  1867  0629  0000               	nop
  1868                           
  1869                           ;lcd.c: 124: RD3 = 0;
  1870  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1871  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1872  062C  1188               	bcf	8,3	;volatile
  1873  062D  0008               	return
  1874  062E                     __end_of_lcd_put_nibble:	
  1875                           
  1876                           	psect	text11
  1877  0589                     __ptext11:	
  1878 ;; *************** function _lcd_busy *****************
  1879 ;; Defined at:
  1880 ;;		line 18 in file "lcd.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  busy            1    1[COMMON] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         1       0       0       0       0
  1896 ;;      Temps:          1       0       0       0       0
  1897 ;;      Totals:         2       0       0       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_lcd_gotoxy
  1904 ;;		_lcd_putc
  1905 ;;		_lcd_init
  1906 ;;		_sw0
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _lcd_busy
  1912  0589                     _lcd_busy:	
  1913                           
  1914                           ;lcd.c: 21: unsigned char busy;
  1915                           ;lcd.c: 24: TRISD4 = 1;
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _lcd_busy: [wreg+status,2]
  1919  0589  1683               	bsf	3,5	;RP0=1, select bank1
  1920  058A  1303               	bcf	3,6	;RP1=0, select bank1
  1921  058B  1608               	bsf	8,4	;volatile
  1922                           
  1923                           ;lcd.c: 25: TRISD5 = 1;
  1924  058C  1688               	bsf	8,5	;volatile
  1925                           
  1926                           ;lcd.c: 26: TRISD6 = 1;
  1927  058D  1708               	bsf	8,6	;volatile
  1928                           
  1929                           ;lcd.c: 27: TRISD7 = 1;
  1930  058E  1788               	bsf	8,7	;volatile
  1931                           
  1932                           ;lcd.c: 29: RD2 = 1;
  1933  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0591  1508               	bsf	8,2	;volatile
  1936                           
  1937                           ;lcd.c: 30: RD1 = 0;
  1938  0592  1088               	bcf	8,1	;volatile
  1939                           
  1940                           ;lcd.c: 31: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1941  0593  3006               	movlw	6
  1942  0594  00F0               	movwf	??_lcd_busy
  1943  0595                     u907:	
  1944  0595  0BF0               	decfsz	??_lcd_busy,f
  1945  0596  2D95               	goto	u907
  1946  0597  0000               	nop
  1947                           
  1948                           ;lcd.c: 32: RD3 = 1;
  1949  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1951  059A  1588               	bsf	8,3	;volatile
  1952                           
  1953                           ;lcd.c: 33: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1954  059B  3006               	movlw	6
  1955  059C  00F0               	movwf	??_lcd_busy
  1956  059D                     u917:	
  1957  059D  0BF0               	decfsz	??_lcd_busy,f
  1958  059E  2D9D               	goto	u917
  1959  059F  0000               	nop
  1960                           
  1961                           ;lcd.c: 35: busy = RD7;
  1962  05A0  3000               	movlw	0
  1963  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1964  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1965  05A3  1B88               	btfsc	8,7	;volatile
  1966  05A4  3001               	movlw	1
  1967  05A5  00F1               	movwf	lcd_busy@busy
  1968                           
  1969                           ;lcd.c: 37: RD3 = 0;
  1970  05A6  1188               	bcf	8,3	;volatile
  1971                           
  1972                           ;lcd.c: 38: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1973  05A7  3006               	movlw	6
  1974  05A8  00F0               	movwf	??_lcd_busy
  1975  05A9                     u927:	
  1976  05A9  0BF0               	decfsz	??_lcd_busy,f
  1977  05AA  2DA9               	goto	u927
  1978  05AB  0000               	nop
  1979                           
  1980                           ;lcd.c: 39: RD3 = 1;
  1981  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1982  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1983  05AE  1588               	bsf	8,3	;volatile
  1984                           
  1985                           ;lcd.c: 40: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1986  05AF  3006               	movlw	6
  1987  05B0  00F0               	movwf	??_lcd_busy
  1988  05B1                     u937:	
  1989  05B1  0BF0               	decfsz	??_lcd_busy,f
  1990  05B2  2DB1               	goto	u937
  1991  05B3  0000               	nop
  1992                           
  1993                           ;lcd.c: 41: RD3 = 0;
  1994  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1995  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1996  05B6  1188               	bcf	8,3	;volatile
  1997                           
  1998                           ;lcd.c: 43: return busy;
  1999  05B7  0871               	movf	lcd_busy@busy,w
  2000  05B8  0008               	return
  2001  05B9                     __end_of_lcd_busy:	
  2002  007E                     btemp	set	126	;btemp
  2003  007E                     wtemp0	set	126


Data Sizes:
    Strings     36
    Constant    59
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> dat_line2(CODE[17]), 


Critical Paths under _main in COMMON

    _sw1->_lcd_puts
    _sw1->_printf
    _lcd_puts->_lcd_putc
    _sw0->_printf
    _printf->_putch
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_sw0
    _sw1->_printf
    _sw0->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14682
                           _lcd_init
                                _sw0
                                _sw1
 ---------------------------------------------------------------------------------
 (1) _sw1                                                  2     2      0    6298
                                              3 BANK0      2     2      0
                         _lcd_gotoxy
                           _lcd_puts
                             _printf
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     2      0    2444
                                             12 COMMON     2     2      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _sw0                                                  3     3      0    7305
                                              3 BANK0      3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
                           _lcd_putc
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0    2497
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0    2391
                                             12 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             2     2      0    2369
                                             10 COMMON     2     2      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           4     3      1    1357
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1079
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_put_byte                                         3     2      1     945
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (6) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
     _lcd_put_nibble
   _sw0
     _lcd_busy
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_put_byte
       _lcd_put_nibble
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
         _lcd_busy
         _lcd_put_byte
           _lcd_put_nibble
       _lcd_put_byte
         _lcd_put_nibble
     _printf
       _putch
         _lcd_putc
           _lcd_busy
           _lcd_gotoxy
             _lcd_busy
             _lcd_put_byte
               _lcd_put_nibble
           _lcd_put_byte
             _lcd_put_nibble
   _sw1
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_puts
       _lcd_putc
         _lcd_busy
         _lcd_gotoxy
           _lcd_busy
           _lcd_put_byte
             _lcd_put_nibble
         _lcd_put_byte
           _lcd_put_nibble
     _printf
       _putch
         _lcd_putc
           _lcd_busy
           _lcd_gotoxy
             _lcd_busy
             _lcd_put_byte
               _lcd_put_nibble
           _lcd_put_byte
             _lcd_put_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 27 06:32:31 2021

                      pc 0002              __CFG_CP$OFF 0000                       l44 05C7  
 __end_of_lcd_put_nibble 062E                       fsr 0004            ?_lcd_put_byte 0073  
                    l984 0602                      l986 060B                      l988 0614  
                    _RB0 0030                      _RB1 0031                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u500 061A                      _PR2 0092                      u440 05FF  
                    u514 061D             __CFG_CPD$OFF 0000                      u460 0608  
                    u535 05DD                      u480 0611                      u807 06D7  
                    u817 06E6                      u907 0595                      u827 0770  
                    u917 059D                      u837 0784                      u927 05A9  
                    u847 0793                      u937 05B1                      u857 07A2  
                    u867 05CC                      u787 0684                      u877 05D4  
                    u797 0693                      u887 061F                      u897 0627  
                    _sw0 06CD                      _sw1 067A                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     l1022 05CA  
                   l1110 07E1                     l1102 07BF                     l1114 07F3  
                   l1106 07D1                     l1042 0580                     l1050 0641  
                   l1130 06F8                     l1036 0570                     l1052 0648  
                   l1060 066E                     l1132 0701                     l1038 0571  
                   l1054 0652                     l1046 0630                     l1134 0714  
                   l1070 050C                     l1056 065B                     l1048 0638  
                   l1232 055C                     l1058 0665                     l1154 0754  
                   l1138 0722                     l1076 052E                     l1148 073D  
                   l1158 06DC                     l1192 0689                     l1098 07AD  
                   ?_sw0 0070                     ?_sw1 0070                     STR_1 0057  
                   STR_2 0044                     _TMR2 0011                     _WPUB 0095  
           __CFG_WRT$OFF 0000                     _main 0547             lcd_busy@busy 0071  
                   sw0@i 0025                     btemp 007E                     start 0000  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ??_sw0 0023  
                  ??_sw1 0023          ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074  
                  _DC2B0 00EC                    _DC2B1 00ED                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _ANSEL 0188                    _T2CON 0012  
                  _PORTB 0006                    _TRISB 0086           __CFG_FCMEN$OFF 0000  
                  _nRBPU 040F                    _putch 0505           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0567            lcd_gotoxy@col 0078  
          lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072                   ??_main 007E  
                 _CCPR2L 001B                   ?_putch 0070                   _ANSELH 0189  
                 _TMR2ON 0092                   _TRISC1 0439                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
         __CFG_PWRTE$OFF 0000         __end_of_lcd_busy 05B9         __end_of_lcd_init 07FC  
       __end_of_lcd_putc 067A         __end_of_lcd_puts 0527                   _printf 0527  
          lcd_put_byte@b 0073                   putch@c 007C  __end_of__initialization 07FC  
   __end_of_lcd_put_byte 05EE           __pcstackCOMMON 0070            __end_of_putch 050B  
      lcd_gotoxy@address 0079                  ??_putch 007C         ??_lcd_put_nibble 0070  
             __pmaintext 0547                  _CCP2CON 001D                  ?_printf 0070  
             _lcd_gotoxy 0567                ?_lcd_busy 0070                ?_lcd_init 0070  
              ?_lcd_putc 0070                ?_lcd_puts 0070               __stringtab 0003  
      __end_of_dat_line1 0033        __end_of_dat_line2 0044        __end_of_cgram_dat 0022  
                __ptext1 067A                  __ptext2 050B                  __ptext3 06CD  
                __ptext4 0527                  __ptext5 0505                  __ptext6 062E  
                __ptext7 0567                  __ptext8 0763                  __ptext9 05B9  
        __size_of_printf 0020             __size_of_sw0 0096             __size_of_sw1 0053  
  __size_of_lcd_put_byte 0035               ??_lcd_busy 0070               ??_lcd_init 0076  
             ??_lcd_putc 007A               ??_lcd_puts 007C     end_of_initialization 07FC  
         lcd_put_byte@rs 0075                  printf@c 0021                  printf@f 0022  
           _lcd_put_byte 05B9              ?_lcd_gotoxy 0076           __end_of_printf 0547  
    start_initialization 07FC              __end_of_sw0 0763              __end_of_sw1 06CD  
    __size_of_lcd_gotoxy 0022                 ??_printf 007D                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_busy 0030        __size_of_lcd_init 0099  
      __size_of_lcd_putc 004C        __size_of_lcd_puts 001C                _dat_line1 0022  
              _dat_line2 0033                _cgram_dat 0009                __pstrings 0003  
         __size_of_putch 0006              __stringbase 0008  __size_of_lcd_put_nibble 0040  
              lcd_putc@c 007B                lcd_puts@s 007D             ??_lcd_gotoxy 0077  
     __end_of_lcd_gotoxy 0589       __end_of__stringtab 0009                 __ptext10 05EE  
               __ptext11 0589        __CFG_BOR4V$BOR40V 0000                 _lcd_busy 0589  
               _lcd_init 0763                 _lcd_putc 062E                 _lcd_puts 050B  
          __size_of_main 0020          lcd_put_nibble@b 0071                stringcode 0003  
               printf@ap 0020           _lcd_put_nibble 05EE                 stringdir 0003  
               stringtab 0003  
